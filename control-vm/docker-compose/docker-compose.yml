---
# Control VM Services Stack
# Location: /opt/homelab-iac/control-vm/docker-compose/docker-compose.yml
# Purpose: All management and IaC services for the homelab
# Network: ${CONTROL_VM_IP} (private network only)

version: '3.8'

# ============================================================================
# SERVICES
# ============================================================================

services:

  # --------------------------------------------------------------------------
  # MkDocs Live Server - Documentation Portal
  # --------------------------------------------------------------------------
  mkdocs:
    image: squidfunk/mkdocs-material:latest
    container_name: mkdocs
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - /opt/homelab-iac:/docs
    command: serve --dev-addr=0.0.0.0:8000
    networks:
      - control-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # --------------------------------------------------------------------------
  # Portainer - Docker Management UI
  # --------------------------------------------------------------------------
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    networks:
      - control-net
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # --------------------------------------------------------------------------
  # HashiCorp Vault - Secrets Management (Production Mode)
  # --------------------------------------------------------------------------
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://${CONTROL_VM_IP}:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data
      - vault-logs:/vault/logs
      - ./configs/vault-config.hcl:/vault/config/vault.hcl:ro
    command: server
    networks:
      - control-net
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # --------------------------------------------------------------------------
  # Docker Registry - Private Container Registry
  # --------------------------------------------------------------------------
  registry:
    image: registry:2
    container_name: registry
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Homelab Docker Registry"
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      REGISTRY_HTTP_ADDR: 0.0.0.0:5000
    volumes:
      - registry-data:/var/lib/registry
      - ./configs/registry-auth:/auth:ro
    networks:
      - control-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/v2/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # --------------------------------------------------------------------------
  # Semaphore Services - Ansible Web UI
  # --------------------------------------------------------------------------
  # Modern alternative to AWX with simpler deployment
  # --------------------------------------------------------------------------

  semaphore-postgres:
    image: postgres:15-alpine
    container_name: semaphore-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${SEMAPHORE_DB_NAME:-semaphore}
      POSTGRES_USER: ${SEMAPHORE_DB_USER:-semaphore}
      POSTGRES_PASSWORD: ${SEMAPHORE_DB_PASSWORD}
    volumes:
      - semaphore-postgres-data:/var/lib/postgresql/data
    networks:
      - control-net
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SEMAPHORE_DB_USER:-semaphore}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # --------------------------------------------------------------------------
  # Semaphore - Ansible Web UI
  # --------------------------------------------------------------------------
  semaphore:
    image: semaphoreui/semaphore:latest
    container_name: semaphore
    restart: unless-stopped
    depends_on:
      semaphore-postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      SEMAPHORE_DB_DIALECT: postgres
      SEMAPHORE_DB_HOST: semaphore-postgres
      SEMAPHORE_DB_PORT: 5432
      SEMAPHORE_DB_USER: ${SEMAPHORE_DB_USER:-semaphore}
      SEMAPHORE_DB_PASS: ${SEMAPHORE_DB_PASSWORD}
      SEMAPHORE_DB_NAME: ${SEMAPHORE_DB_NAME:-semaphore}
      SEMAPHORE_DB: ${SEMAPHORE_DB_NAME:-semaphore}
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_NAME: ${SEMAPHORE_ADMIN_NAME:-admin}
      SEMAPHORE_ADMIN_EMAIL: ${SEMAPHORE_ADMIN_EMAIL:-admin@localhost}
      SEMAPHORE_ADMIN: ${SEMAPHORE_ADMIN_NAME:-admin}
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: ${SEMAPHORE_ACCESS_KEY_ENCRYPTION}
      SEMAPHORE_LDAP_ACTIVATED: 'no'
    volumes:
      - semaphore-data:/etc/semaphore
      - /opt/homelab-iac/ansible:/ansible:ro
    networks:
      - control-net
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# ============================================================================
# VOLUMES
# ============================================================================

volumes:
  portainer-data:
    driver: local
  vault-data:
    driver: local
  vault-logs:
    driver: local
  registry-data:
    driver: local
  semaphore-postgres-data:
    driver: local
  semaphore-data:
    driver: local

# ============================================================================
# NETWORKS
# ============================================================================

networks:
  control-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
